<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>software.amazon.samples.greeting</groupId>
    <artifactId>aws-proserve-java-greeting</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

<!--    spring-boot-starter-parent latest 2.x.x version check in apache maven repository -->
<!--    (https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent)-->
<!--    and update latest accordingly in <version> </version> below to get rid of sec vulnerabilties-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.9</version>
 <!--       <version>2.0.5.RELEASE</version> -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.release>11</maven.compiler.release>
        <docker.repo>${env.IMAGE_REPO_NAME}</docker.repo>
        <docker.tag>latest</docker.tag>
        <docker.registry>${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_DEFAULT_REGION}.amazonaws.com/</docker.registry>
        <docker.name>${docker.registry}/${docker.repo}:${docker.tag}</docker.name>
        <greeting.host>localhost</greeting.host>
        <greeting.port>8080</greeting.port>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.7.9</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
            <version>2.7.9</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>2.7.9</version>
        <!--<scope>provided</scope>-->
       </dependency>
       <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.7.9</version>
        <scope>test</scope>
       </dependency>
        <dependency>
           <groupId>com.amazonaws</groupId>
           <artifactId>aws-java-sdk-codeguruprofiler</artifactId>
           <version>1.12.696</version>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-simple</artifactId>
         <version>${slf4j.version}</version>
        </dependency>
        <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>${slf4j.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jib</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.3.1</version>
                        <configuration>
                            <from>
                                <image>openjdk:11-jre-slim</image>
                            </from>
                            <to>
                                <image>${docker.name}</image>
                            </to>
                            <container>
                                <environment>
                                    <_JAVA_OPTIONS>'-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'</_JAVA_OPTIONS>
                                </environment>
                                <ports>
                                    <port>8080</port>
                                    <port>5005</port>
                                </ports>
                            </container>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
